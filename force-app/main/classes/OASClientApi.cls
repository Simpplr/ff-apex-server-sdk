/*
 * Harness feature flag service client apis
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: cf@harness.io
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

public class OASClientApi {
    OASClient client;

    public OASClientApi(OASClient client) {
        this.client = client;
    }

    public OASClient getClient() {
        return this.client;
    }

    /**
     * Authenticate with the admin server.
     * Used to retrieve all target segments for certain account id.
     * @param oaSAuthenticationRequest  (optional)
     * @return OASAuthenticationResponse
     * @throws OAS.ApiException if fails to make API call
     */
    public OASAuthenticationResponse authenticate(Map<String, Object> params) {
        List<OAS.Param> query = new List<OAS.Param>();
        List<OAS.Param> form = new List<OAS.Param>();

        return (OASAuthenticationResponse) client.invoke(
            'POST', '/client/auth',
            (OASAuthenticationRequest) params.get('oaSAuthenticationRequest'),
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String>(),
            OASAuthenticationResponse.class
        );
    }

    /**
     * Get feature evaluations for target
     * 
     * @param environmentUUID Unique identifier for the environment object in the API. (required)
     * @param feature Unique identifier for the flag object in the API. (required)
     * @param target Unique identifier for the target object in the API. (required)
     * @param cluster Unique identifier for the cluster for the account (optional)
     * @return OASEvaluation
     * @throws OAS.ApiException if fails to make API call
     */
    public OASEvaluation getEvaluationByIdentifier(Map<String, Object> params) {
        client.assertNotNull(params.get('environmentUUID'), 'environmentUUID');
        client.assertNotNull(params.get('feature'), 'feature');
        client.assertNotNull(params.get('target'), 'target');
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('cluster', (String) params.get('cluster')));

        List<OAS.Param> form = new List<OAS.Param>();

        return (OASEvaluation) client.invoke(
            'GET', '/client/env/{environmentUUID}/target/{target}/evaluations/{feature}', '',
            query, form,
            new Map<String, Object>{
                'environmentUUID' => (String) params.get('environmentUUID'),
                'feature' => (String) params.get('feature'),
                'target' => (String) params.get('target')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>(),
            new List<String> { 'BearerAuth' },
            OASEvaluation.class
        );
    }
    /**
     * Get feature evaluations for target
     * 
     * @param environmentUUID Unique identifier for the environment object in the API. (required)
     * @param target Unique identifier for the target object in the API. (required)
     * @param cluster Unique identifier for the cluster for the account (optional)
     * @return List<OASEvaluation>
     * @throws OAS.ApiException if fails to make API call
     */
    public List<OASEvaluation> getEvaluations(Map<String, Object> params) {
        client.assertNotNull(params.get('environmentUUID'), 'environmentUUID');
        client.assertNotNull(params.get('target'), 'target');
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('cluster', (String) params.get('cluster')));

        List<OAS.Param> form = new List<OAS.Param>();

        return (List<OASEvaluation>) client.invoke(
            'GET', '/client/env/{environmentUUID}/target/{target}/evaluations', '',
            query, form,
            new Map<String, Object>{
                'environmentUUID' => (String) params.get('environmentUUID'),
                'target' => (String) params.get('target')
            },
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>(),
            new List<String> { 'BearerAuth' },
            List<OASEvaluation>.class
        );
    }

    /**
     * Stream endpoint.
     * 
     * @param apIKey  (required)
     * @param cluster Unique identifier for the cluster for the account (optional)
     * @throws OAS.ApiException if fails to make API call
     */
    public void stream(Map<String, Object> params) {
        client.assertNotNull(params.get('apIKey'), 'apIKey');
        List<OAS.Param> query = new List<OAS.Param>();

        // cast query params to verify their expected type
        query.addAll(client.makeParam('cluster', (String) params.get('cluster')));

        List<OAS.Param> form = new List<OAS.Param>();

        client.invoke(
            'GET', '/stream', '',
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>{
                'API-Key' => (String) params.get('apIKey')
            },
            new List<String>(),
            new List<String>(),
            new List<String> { 'BearerAuth' },
            null
        );
    }
}
